<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1807092_mock_ski_equipe</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1807092_mock_ski_equipe">cargo=estagiario^EQ<item display_value="Estagiário" endquery="false" field="cargo" goto="false" newquery="false" operator="=" or="false" value="estagiario"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Associa Cursos a um estagiario novo</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    // 1. Procura por todos os cursos que estão marcados como 'Ativo'.
    // A observação diz "status definido como Aberto", mas o status pertence ao progresso do aluno,
    // não ao curso em si. A lógica correta é associar a todos os cursos ATIVOS.
    var grCurso = new GlideRecord('u_cursos');
    grCurso.addQuery('u_ativo', true);
    grCurso.query();

    // 2. Para cada curso ativo encontrado, cria uma associação na tabela 'Progresso'.
    while (grCurso.next()) {

        // 3. Cria um novo registro na tabela de Progresso (M2M).
        // Usando o nome exato da sua tabela de Progresso.
        var grProgresso = new GlideRecord('x_1807092_mock_ski_progresso_m2m');
        grProgresso.initialize();

        // 4. Preenche os campos da associação.
        grProgresso.setValue('u_estagi_rio', current.getUniqueValue()); // Pega o ID do estagiário que acabou de ser criado.
        grProgresso.setValue('u_curso', grCurso.getUniqueValue());      // Pega o ID do curso ativo encontrado no loop.
        grProgresso.setValue('u_status', 'aberto');                     // Define o status inicial como 'Aberto'.

        // 5. Insere o novo registro de progresso no banco de dados.
        grProgresso.insert();
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-30 21:13:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e6b2da31838f621016c7c4b6feaad363</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Associa Cursos a um estagiario novo</sys_name>
        <sys_overrides/>
        <sys_package display_value="Mock SkillUp" source="x_1807092_mock_ski">8b05d9b9830b621016c7c4b6feaad31b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Mock SkillUp">8b05d9b9830b621016c7c4b6feaad31b</sys_scope>
        <sys_update_name>sys_script_e6b2da31838f621016c7c4b6feaad363</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-30 21:13:06</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e6b2da31838f621016c7c4b6feaad363"/>
</record_update>
